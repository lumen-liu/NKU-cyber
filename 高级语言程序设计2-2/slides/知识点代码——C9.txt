////#include<iostream>
////using namespace std;
////===========================函数模板==========================
////template <class T>   //模板参数表里面包含一个名为class的类
////T max1(T a, T b)     //返回值类型为T，参数为T类型的两个变量a和b
////{
////	if(a>b)
////		return a;
////	else
////		return b;
////}
////
////void main()
////{
////	cout<<max1(1,2)<<endl;
////	cout<<max1("a","b")<<endl;
////	cout<<max1(1.5,2.5)<<endl;
////	cout<<max1(2,3.5)<<endl;  //错误！不能自动转换！
////}
//
//
//
//#include <iostream>
//#include <string.h>
//using namespace std;
//
//template <class T>   //模板，取两个数较小的那个
//T min1 (T a, T b)
//{
//	return (a<b?a:b);
//}
////char* min1 (char* a, char* b) //同名函数，比较两个字符串的大小
////{  
////	return (strcmp(a,b)<0?a:b);  
////}
//void main() 
//{
//	cout<<min1(3,-10)<<endl;   //这三个都使用函数模板
//	cout<<min1(2.5,99.5)<<endl;
//	cout<<min1('m','c')<<endl;
//	char* str1="The C program", * str2="The C++ program";
//	cout<<min1(str1, str2)<<endl;  //使用同名函数
//} 
//
//
////#include <iostream>
////using namespace std;
////template <class Type>
////
////Type sum (Type * array, int size )
////{	
//////求array数组前size个元素之和     参数个数2 
////    Type total=0;
////    for (int i=0;i<size;i++)
////         total+=*(array+i);
////    return total;
////} 
////
////template <class Type> 
////Type sum (Type * a1, Type * a2, int size ){
////	//求a1数组与a2数组前size个元素之和      参数个数3 
////    Type total=0;
////    for (int i=0;i<size;i++)
////         total+=a1[i]+a2[i];
////    return total;
////}
////
////void main() 
////{
////    int a1[10],a2[8];
////    float af[10];
////    for(int i= 0;i<10;i++)
////	{
////		float m = 1.1;
////		if(i<8)
////		{
////			a2[i]= i+10;
////		}
////		a1[i]= i;
////	    af[i]= m+1;
////	}
////
////	//为数组分量定值
////    cout<<sum(a1,10)<<endl;
////	  //求出a1数组前10个元素之和并输出输出     参数个数2
////    cout<<sum(af,10)<<endl;
////    cout<<sum(a1,a2,8)<<endl;   
////	  //求a1与a2数组前8个元素之和并输出     参数个数3
////} 
////
